{"version":3,"sources":["utils/streamServices.js","App.jsx","index.jsx"],"names":["getChatUrl","_ref","service","payload","concat","getPlayerUrl","_ref2","document","title","GlobalStyle","createGlobalStyle","_templateObject","Container","styled","div","_templateObject2","p","css","_templateObject3","Player","iframe","_templateObject4","_templateObject5","ChatWrapper","_templateObject6","ChatTabs","_templateObject7","ChatTab","_templateObject8","active","Chats","_templateObject9","Chat","_templateObject10","player","chats","id","App","_useState","useState","_useState2","Object","slicedToArray","activeChatId","setActiveChatId","playerRef","useRef","useLayoutEffect","current","setAttribute","react_default","a","createElement","Fragment","name","src","ref","map","chat","key","onClick","ReactDOM","render","src_App","getElementById"],"mappings":"8LAAaA,EAAa,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,QACpC,OAAQD,GACN,IAAK,SACL,QACE,+BAAAE,OAAgCD,EAAhC,oBAEF,IAAK,WACH,wCAAAC,OAAyCD,KAIlCE,EAAe,SAAAC,GAA0B,IAAvBJ,EAAuBI,EAAvBJ,QAASC,EAAcG,EAAdH,QACtC,OAAQD,GACN,IAAK,SACL,QACE,qCAAAE,OAAsCD,GAExC,IAAK,WACH,iCAAAC,OAAkCD,mrECbxCI,SAASC,MAAQ,uBAEjB,IAAMC,EAAcC,YAAHC,KAWXC,EAAYC,IAAOC,IAAVC,IAIX,SAAAC,GAAC,MAAkB,aAAdA,EAAEd,SACJe,YADEC,OAaHC,EAASN,IAAOO,OAAVC,IAKR,SAAAL,GAAC,MAAkB,aAAdA,EAAEd,SACJe,YADEK,OAKHC,EAAcV,IAAOC,IAAVU,KAQXC,EAAWZ,IAAOC,IAAVY,KASRC,EAAUd,IAAOC,IAAVc,IAGF,SAAAZ,GAAC,OAAKA,EAAEa,OAAS,UAAY,WACd,SAAAb,GAAC,OAAKA,EAAEa,OAAS,sBAAwB,kBAc7DC,EAAQjB,IAAOC,IAAViB,KAKLC,EAAOnB,IAAOO,OAAVa,IAMG,SAAAjB,GAAC,OAAKA,EAAEa,OAAS,QAAU,QAC3B,SAAAb,GAAC,OAAKA,EAAEa,OAAS,EAAI,IAS5BK,EAAS,CAAEhC,QAAS,SAAUC,QAAS,YAGvCgC,EAAQ,CACZ,CAAEC,GAAI,EAAGlC,QAAS,SAAUC,QAAS,YACrC,CAAEiC,GAAI,EAAGlC,QAAS,SAAUC,QAAS,WA+CxBkC,EA3CH,WAAM,IAAAC,EACwBC,mBAASJ,EAAM,GAAGC,IAD1CI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACKI,EADLJ,EAAA,GAEVK,EAAYC,iBAAO,MAQzB,OANAC,0BAAgB,WACVF,EAAUG,SAA8B,WAAnBd,EAAOhC,SAC9B2C,EAAUG,QAAQC,aAAa,kBAAmB,SAEnD,IAGDC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACxC,EAAD,CAAWV,QAASgC,EAAOhC,SACzBgD,EAAAC,EAAAC,cAACjC,EAAD,CAAQmC,KAAK,SAASC,IAAKlD,EAAa6B,GAAShC,QAASgC,EAAOhC,QAASsD,IAAKX,IAC/EK,EAAAC,EAAAC,cAAC7B,EAAD,KACE2B,EAAAC,EAAAC,cAAC3B,EAAD,KACGU,EAAMsB,IAAI,SAAAC,GAAI,OACbR,EAAAC,EAAAC,cAACzB,EAAD,CACEgC,IAAKD,EAAKtB,GACVP,OAAQ6B,EAAKtB,KAAOO,EACpBiB,QAAS,kBAAMhB,EAAgBc,EAAKtB,MAEnCsB,EAAKvD,YAIZ+C,EAAAC,EAAAC,cAACtB,EAAD,KACEoB,EAAAC,EAAAC,cAACpB,EAAD,CACE2B,IAAKxB,EAAM,GAAGC,GACdP,OAAQM,EAAM,GAAGC,KAAOO,EACxBY,IAAKvD,EAAWmC,EAAM,SAQ9Be,EAAAC,EAAAC,cAAC3C,EAAD,QChJNoD,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAASxD,SAASyD,eAAe","file":"static/js/main.04c3d32e.chunk.js","sourcesContent":["export const getChatUrl = ({ service, payload }) => {\n  switch (service) {\n    case 'twitch':\n    default:\n      return `//www.twitch.tv/embed/${payload}/chat?darkpopout`;\n\n    case 'nonolive':\n      return `//www.nonolive.com/popout/chat/${payload}`;\n  }\n};\n\nexport const getPlayerUrl = ({ service, payload }) => {\n  switch (service) {\n    case 'twitch':\n    default:\n      return `//player.twitch.tv/?channel=${payload}`;\n\n    case 'nonolive':\n      return `//www.nonolive.com/room/${payload}`;\n  }\n};\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport styled, { createGlobalStyle, css } from 'styled-components';\n\nimport { getChatUrl, getPlayerUrl } from './utils/streamServices';\n\ndocument.title = 'HoneyNyticK - Twitch';\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --color-black: #0e0c13;\n    --color-violet: #2c2541;\n    --color-violet-dark: #1f1925;\n    --chat-tabs-height: 26px;\n  }\n  body {\n    margin: 0;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n\n  ${p => p.service === 'nonolive'\n    && css`\n      &:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        right: 340px;\n        bottom: 0;\n        height: 60px;\n        background-color: #313131;\n      }\n    `};\n`;\nconst Player = styled.iframe`\n  position: relative;\n  border: none;\n  width: 100%;\n\n  ${p => p.service === 'nonolive'\n    && css`\n      margin-right: -340px;\n    `};\n`;\nconst ChatWrapper = styled.div`\n  position: relative;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  width: 340px;\n`;\nconst ChatTabs = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  height: var(--chat-tabs-height);\n  border-bottom: 1px solid var(--color-violet);\n`;\nconst ChatTab = styled.div`\n  flex-grow: 1;\n  flex-basis: 0;\n  color: ${p => (p.active ? '#d3d3d3' : '#898395')};\n  background-color: var(${p => (p.active ? '--color-violet-dark' : '--color-black')});\n  font-family: sans-serif;\n  font-size: 12px;\n  font-weight: bold;\n  line-height: var(--chat-tabs-height);\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--color-violet-dark);\n  }\n  &:not(:last-child) {\n    border-right: 1px solid var(--color-violet);\n  }\n`;\nconst Chats = styled.div`\n  position: relative;\n  margin-top: var(--chat-tabs-height);\n  height: calc(100% - var(--chat-tabs-height));\n`;\nconst Chat = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: ${p => (p.active ? 'block' : 'none')};\n  z-index: ${p => (p.active ? 1 : 0)};\n  width: 100%;\n  height: 100%;\n  flex-grow: 1;\n  flex-shrink: 0;\n  border: none;\n  background-color: #fff;\n`;\n\nconst player = { service: 'twitch', payload: 'honeymad' };\n// const player = { service: 'nonolive', payload: '14264101' };\n\nconst chats = [\n  { id: 1, service: 'twitch', payload: 'honeymad' },\n  { id: 2, service: 'twitch', payload: 'nytick' },\n  // { id: 3, service: 'nonolive', payload: '14264101' },\n];\n\nconst App = () => {\n  const [activeChatId, setActiveChatId] = useState(chats[0].id);\n  const playerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    if (playerRef.current && player.service === 'twitch') {\n      playerRef.current.setAttribute('allowfullscreen', 'true');\n    }\n  }, []);\n\n  return (\n    <>\n      <Container service={player.service}>\n        <Player name=\"player\" src={getPlayerUrl(player)} service={player.service} ref={playerRef} />\n        <ChatWrapper>\n          <ChatTabs>\n            {chats.map(chat => (\n              <ChatTab\n                key={chat.id}\n                active={chat.id === activeChatId}\n                onClick={() => setActiveChatId(chat.id)}\n              >\n                {chat.payload}\n              </ChatTab>\n            ))}\n          </ChatTabs>\n          <Chats>\n            <Chat\n              key={chats[0].id}\n              active={chats[0].id === activeChatId}\n              src={getChatUrl(chats[0])}\n            />\n            {/* {chats.map(chat => (\n              <Chat key={chat.id} active={chat.id === activeChatId} src={getChatUrl(chat)} />\n            ))} */}\n          </Chats>\n        </ChatWrapper>\n      </Container>\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}